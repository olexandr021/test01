# modules/strategies_tab.py
# –§—ñ–Ω–∞–ª—å–Ω–∞ –∫–æ–Ω—Å–æ–ª—ñ–¥–æ–≤–∞–Ω–∞ –≤–µ—Ä—Å—ñ—è (model-117)
import streamlit as st
import os
import importlib
import importlib.util
import sys
import inspect
import time # –î–æ–¥–∞–Ω–æ –¥–ª—è –ø–∞—É–∑–∏
import json # –î–æ–¥–∞–Ω–æ –¥–ª—è json.dumps
from modules.config_manager import ConfigManager
from modules.logger import logger

# –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –±–∞–∑–æ–≤–∏–π –∫–ª–∞—Å –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–∫–∏
try:
    from strategies.base_strategy import BaseStrategy
except ImportError:
    logger.error("Strat Tab: –ù–µ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ BaseStrategy.")
    class BaseStrategy: # –ö–æ—Ä–µ–∫—Ç–Ω–∞ –∑–∞–≥–ª—É—à–∫–∞
        pass

def load_strategies(strategies_dir: str = 'strategies') -> dict:
    """
    –î–∏–Ω–∞–º—ñ—á–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î –∫–ª–∞—Å–∏ —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π –∑ –≤–∫–∞–∑–∞–Ω–æ—ó –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó.
    –®—É–∫–∞—î –∫–ª–∞—Å–∏, —â–æ —É—Å–ø–∞–¥–∫–æ–≤—É—é—Ç—å—Å—è –≤—ñ–¥ BaseStrategy.
    """
    strategies = {}
    abs_strategies_dir = os.path.abspath(strategies_dir) # –ê–±—Å–æ–ª—é—Ç–Ω–∏–π —à–ª—è—Ö
    if not os.path.isdir(abs_strategies_dir):
        logger.error(f"–î–∏—Ä–µ–∫—Ç–æ—Ä—ñ—è —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π '{strategies_dir}' ({abs_strategies_dir}) –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞.")
        return strategies

    # –ó–Ω–∞—Ö–æ–¥–∏–º–æ —Ñ–∞–π–ª–∏ .py, –∫—Ä—ñ–º —Å–ª—É–∂–±–æ–≤–∏—Ö
    strategy_files = [f for f in os.listdir(abs_strategies_dir) if f.endswith('.py') and f not in ['__init__.py','base_strategy.py']]

    # –ë–µ–∑–ø–µ—á–Ω–æ –¥–æ–¥–∞—î–º–æ —à–ª—è—Ö –¥–æ sys.path
    added_to_path = False
    if abs_strategies_dir not in sys.path:
        sys.path.insert(0, abs_strategies_dir) # –í—Å—Ç–∞–≤–ª—è—î–º–æ –Ω–∞ –ø–æ—á–∞—Ç–æ–∫
        added_to_path = True
        logger.debug(f"–î–æ–¥–∞–Ω–æ '{abs_strategies_dir}' –¥–æ sys.path")

    # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∞ —ñ–Ω—Å–ø–µ–∫—Ç—É—î–º–æ –º–æ–¥—É–ª—ñ
    for file_name in strategy_files:
        module_name = file_name[:-3]
        try:
            # –î–∏–Ω–∞–º—ñ—á–Ω–æ —ñ–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥—É–ª—å
            module = importlib.import_module(module_name)
            # –°–ø—Ä–æ–±—É—î–º–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏, —â–æ–± –ø—ñ–¥—Ö–æ–ø–∏—Ç–∏ –∑–º—ñ–Ω–∏
            # (–º–æ–∂–µ –Ω–µ —Å–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –Ω–∞–¥—ñ–π–Ω–æ, –∫—Ä–∞—â–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç–∏ Streamlit)
            try:
                module = importlib.reload(module)
                logger.debug(f"–ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –º–æ–¥—É–ª—å: {module_name}")
            except Exception as reload_e:
                 # –ù–µ –∫—Ä–∏—Ç–∏—á–Ω–æ, —è–∫—â–æ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–µ –≤–¥–∞–ª–æ—Å—è
                 logger.debug(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –º–æ–¥—É–ª—å {module_name}: {reload_e}")

            # –®—É–∫–∞—î–º–æ –∫–ª–∞—Å–∏, —â–æ —î –Ω–∞—â–∞–¥–∫–∞–º–∏ BaseStrategy
            for name, obj in inspect.getmembers(module):
                is_valid_class = inspect.isclass(obj) and issubclass(obj, BaseStrategy) and obj is not BaseStrategy
                if is_valid_class:
                    if name in strategies:
                         logger.warning(f"–ö–ª–∞—Å —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó '{name}' –∑–Ω–∞–π–¥–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤ {file_name}.")
                    strategies[name] = obj
                    logger.info(f"–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—é: '{name}' –∑ {file_name}")

        except ImportError as e:
             logger.error(f"–ü–æ–º–∏–ª–∫–∞ —ñ–º–ø–æ—Ä—Ç—É –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ {file_name}: {e}")
        except Exception as e:
            logger.error(f"–ó–∞–≥–∞–ª—å–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ {file_name}: {e}", exc_info=True)

    # –ë–µ–∑–ø–µ—á–Ω–æ –≤–∏–¥–∞–ª—è—î–º–æ —à–ª—è—Ö, —è–∫—â–æ –º–∏ –π–æ–≥–æ –¥–æ–¥–∞–≤–∞–ª–∏
    # --- –í–ò–ü–†–ê–í–õ–ï–ù–û –¢–£–¢: –ö–æ—Ä–µ–∫—Ç–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ ---
    if added_to_path:
        try:
            sys.path.remove(abs_strategies_dir)
            logger.debug(f"–í–∏–¥–∞–ª–µ–Ω–æ '{abs_strategies_dir}' –∑ sys.path")
        except ValueError:
            # –ú–æ–∂–ª–∏–≤–æ, —à–ª—è—Ö –≤–∂–µ –±—É–ª–æ –≤–∏–¥–∞–ª–µ–Ω–æ —ñ–Ω—à–∏–º –ø—Ä–æ—Ü–µ—Å–æ–º/–ø–æ—Ç–æ–∫–æ–º
            logger.error(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ '{abs_strategies_dir}' –∑ sys.path (–º–æ–∂–ª–∏–≤–æ, –≤–∂–µ –≤–∏–¥–∞–ª–µ–Ω–æ).")
        except Exception as e_rem:
             logger.error(f"–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ —à–ª—è—Ö—É '{abs_strategies_dir}': {e_rem}")
    # --- –ö–Ü–ù–ï–¶–¨ –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø ---


    if not strategies:
         logger.warning(f"–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –≤ '{strategies_dir}'.")

    return strategies

# –ü—Ä–∏–π–º–∞—î–º–æ config_manager —è–∫ –∞—Ä–≥—É–º–µ–Ω—Ç
def show_strategies_tab(available_strategies: dict, config_manager: ConfigManager):
    """–í—ñ–¥–æ–±—Ä–∞–∂–∞—î –≤–∫–ª–∞–¥–∫—É –∑—ñ —Å–ø–∏—Å–∫–æ–º –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π."""
    st.header("üß≠ –î–æ—Å—Ç—É–ø–Ω—ñ —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó")
    if not available_strategies:
        st.warning("–ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∏—Ö —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–∞–ø–∫—É `strategies`.")
        # –ú–æ–∂–ª–∏–≤–æ, –¥–æ–¥–∞—Ç–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–ø—Ä–æ–±–∏ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç—É—Ç?
        return

    st.info(f"–ó–Ω–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π: {len(available_strategies)}")

    # –ö–Ω–æ–ø–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–ø–∏—Å–∫—É
    if st.button("üîÑ –û–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞—Ç–µ–≥—ñ–π"):
         st.info("–°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è... –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ä–µ—Å—É—Ä—Å—ñ–≤ –º–æ–∂–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏.")
         # –û—á–∏—Å—Ç–∫–∞ –∫–µ—à—É –º–æ–∂–µ –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ø—ñ–¥—Ö–æ–ø–∏—Ç–∏ –Ω–æ–≤—ñ —Ñ–∞–π–ª–∏ –∞–±–æ –∑–º—ñ–Ω–∏ –≤ —ñ—Å–Ω—É—é—á–∏—Ö
         # –ê–ª–µ —Ü–µ –º–æ–∂–µ –≤–ø–ª–∏–Ω—É—Ç–∏ –Ω–∞ —ñ–Ω—à—ñ –∫–µ—à–æ–≤–∞–Ω—ñ –æ–±'—î–∫—Ç–∏ (API, BotCore) - –æ–±–µ—Ä–µ–∂–Ω–æ!
         try:
             st.cache_resource.clear() # –û—á–∏—â–∞—î–º–æ –∫–µ—à —Ä–µ—Å—É—Ä—Å—ñ–≤ (–¥–µ –º–æ–∂–µ –±—É—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç load_strategies?)
             logger.info("–û—á–∏—â–µ–Ω–æ –∫–µ—à —Ä–µ—Å—É—Ä—Å—ñ–≤ Streamlit.")
         except Exception as e:
              logger.error(f"–ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è –∫–µ—à—É —Ä–µ—Å—É—Ä—Å—ñ–≤: {e}")
         time.sleep(0.5) # –ù–µ–≤–µ–ª–∏–∫–∞ –ø–∞—É–∑–∞
         st.rerun() # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∏–ø—Ç Streamlit

    # –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –∫–æ–∂–Ω—É —Å—Ç—Ä–∞—Ç–µ–≥—ñ—é
    for name, strategy_class in available_strategies.items():
        st.subheader(f"`{name}`")
        # –û–ø–∏—Å –∑ docstring
        docstring = inspect.getdoc(strategy_class)
        if docstring:
             st.caption(docstring.strip())
        else:
             st.caption("–û–ø–∏—Å –¥–ª—è —Ü—ñ—î—ó —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó –≤—ñ–¥—Å—É—Ç–Ω—ñ–π.")
        # –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        default_params = {}
        if hasattr(strategy_class, 'get_default_params'):
            default_params = strategy_class.get_default_params()
        if default_params:
            with st.expander("–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º"):
                # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ json.dumps –¥–ª—è –∫—Ä–∞—â–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Å–ª–æ–≤–Ω–∏–∫–∞
                st.json(json.dumps(default_params, indent=2, default=str)) # default=str –¥–ª—è Decimal/—ñ–Ω—à–∏—Ö —Ç–∏–ø—ñ–≤
        # –ó–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
        saved_config = config_manager.get_strategy_config(name)
        if saved_config:
            with st.expander("–ó–±–µ—Ä–µ–∂–µ–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è (–∑ config.json)"):
                st.json(json.dumps(saved_config, indent=2, default=str))
        st.markdown("---")

    # –î–æ–¥–∞—î–º–æ —à–∞–±–ª–æ–Ω BaseStrategy
    st.subheader("üìù –®–∞–±–ª–æ–Ω –¥–ª—è –ù–æ–≤–æ—ó –°—Ç—Ä–∞—Ç–µ–≥—ñ—ó (`base_strategy.py`)")
    try:
         # –í–∫–∞–∑—É—î–º–æ —à–ª—è—Ö –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–∞–ø–∫–∏, –¥–µ –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è streamlit_app.py
         # –Ø–∫—â–æ –∑–∞–ø—É—Å–∫–∞—î—Ç–µ –∑ –∫–æ—Ä–µ–Ω—è –ø—Ä–æ–µ–∫—Ç—É, —à–ª—è—Ö –º–∞—î –±—É—Ç–∏ 'strategies/base_strategy.py'
         base_strategy_path = os.path.join('strategies', 'base_strategy.py')
         if not os.path.exists(base_strategy_path):
             # –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —à–ª—è—Ö –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ñ–∞–π–ª—É (–º–µ–Ω—à –Ω–∞–¥—ñ–π–Ω–æ)
             base_strategy_path = os.path.join(os.path.dirname(__file__), '..', 'strategies', 'base_strategy.py')

         with open(base_strategy_path, "r", encoding="utf-8") as f:
             base_code = f.read()
         st.code(base_code, language='python')
         st.caption("–°—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤–∏–π —Ñ–∞–π–ª .py –≤ –ø–∞–ø—Ü—ñ 'strategies', —É—Å–ø–∞–¥–∫—É–π—Ç–µ –∫–ª–∞—Å –≤—ñ–¥ BaseStrategy —Ç–∞ —Ä–µ–∞–ª—ñ–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ `calculate_signals`.")
    except FileNotFoundError:
         st.warning(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ñ–∞–π–ª —à–∞–±–ª–æ–Ω—É —Å—Ç—Ä–∞—Ç–µ–≥—ñ—ó: {base_strategy_path}")
    except Exception as e:
         st.error(f"–ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É —à–∞–±–ª–æ–Ω—É: {e}")
